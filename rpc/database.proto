/*===========================================================================*\
 *           MIT License Copyright (c) 2022 Kris Nóva <kris@nivenly.com>     *
 *                                                                           *
 *                ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓                *
 *                ┃   ███╗   ██╗ ██████╗ ██╗   ██╗ █████╗   ┃                *
 *                ┃   ████╗  ██║██╔═████╗██║   ██║██╔══██╗  ┃                *
 *                ┃   ██╔██╗ ██║██║██╔██║██║   ██║███████║  ┃                *
 *                ┃   ██║╚██╗██║████╔╝██║╚██╗ ██╔╝██╔══██║  ┃                *
 *                ┃   ██║ ╚████║╚██████╔╝ ╚████╔╝ ██║  ██║  ┃                *
 *                ┃   ╚═╝  ╚═══╝ ╚═════╝   ╚═══╝  ╚═╝  ╚═╝  ┃                *
 *                ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛                *
 *                                                                           *
 *                       This machine kills fascists.                        *
 *                                                                           *
\*===========================================================================*/

syntax = "proto3";

option go_package = "github.com/kris-nova/aurae/rpc/rpc";

package aurae;

service Database {
  rpc Set (SetReq) returns (SetResp) {}
  rpc Get (GetReq) returns (GetResp) {}
  rpc List (ListReq) returns (ListResp) {}
  rpc Remove (RemoveReq) returns (RemoveResp) {}
}

message SetReq {
  string key = 1;
  string val = 2;
}

message SetResp {
  int32 code = 1;
}

message GetReq {
  string key = 1;
}

message GetResp {
  string val = 1;
  int32 code = 2;
}

message RemoveReq {
  string key = 1;
}

message RemoveResp {
  int32 code = 1;
}


message ListReq {
  string key = 1;
}

message Node {
  string name = 1;
  bool file = 2;
}

message ListResp {
  map<string, Node> entries = 1;
  int32 code = 2;
}