/*===========================================================================*\
 *           MIT License Copyright (c) 2022 Kris Nóva <kris@nivenly.com>     *
 *                                                                           *
 *                ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓                *
 *                ┃   ███╗   ██╗ ██████╗ ██╗   ██╗ █████╗   ┃                *
 *                ┃   ████╗  ██║██╔═████╗██║   ██║██╔══██╗  ┃                *
 *                ┃   ██╔██╗ ██║██║██╔██║██║   ██║███████║  ┃                *
 *                ┃   ██║╚██╗██║████╔╝██║╚██╗ ██╔╝██╔══██║  ┃                *
 *                ┃   ██║ ╚████║╚██████╔╝ ╚████╔╝ ██║  ██║  ┃                *
 *                ┃   ╚═╝  ╚═══╝ ╚═════╝   ╚═══╝  ╚═╝  ╚═╝  ┃                *
 *                ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛                *
 *                                                                           *
 *                       This machine kills fascists.                        *
 *                                                                           *
\*===========================================================================*/

syntax = "proto3";

option go_package = "github.com/kris-nova/aurae/rpc/rpc";

package aurae;

// TODO what about "app" instead of "container"? Where is the abstraction layer?
service Runtime {

  // RunProcess
  rpc RunProcess(RunProcessRequest) returns (RunProcessResponse) {}

  // RunContainer
  rpc RunContainer(RunContainerRequest) returns (RunContainerResponse) {}

  // RunVirtualMachine
  rpc RunVirtualMachine(RunVirtualMachineRequest)
      returns (RunVirtualMachineResponse) {}
}

message RunVirtualMachineRequest { string Name = 1; }

message RunVirtualMachineResponse {
  int32 Code = 10;
  string Message = 12;
}

message RunProcessRequest {
  string Name = 1;
  string ExecutablePath = 2;
  string ExecutableArgs = 3;
}

message RunProcessResponse {
  int32 Code = 10;
  string Message = 12;
}

message RunContainerRequest { string Name = 1; }

message RunContainerResponse {
  int32 Code = 10;
  string Message = 12;
}
